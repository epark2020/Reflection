How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I could easily identify where the bug was in such large files

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

   It allows us to find where the bug came from in old and new files.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros would be that manually choosing allows the programmer to decide on to
    themselves on when to commit.  Cons would be that when commits are made could
    be inconsistent.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because, in programming, there could be instances where multiple files are interdependent
    to each other.  In these cases, we want to save multiple files in one commit.

How can you use the commands git log and git diff to view the history of files?

    git log shows all the commits.  So, using that, you can view the history of
    files.  You can compare the files by using git diff.

How might using version control make you more confident to make changes that
could break something?

    You could always go back.

Now that you have your workspace set up, what do you want to try using Git for?

  Programming using version controls
